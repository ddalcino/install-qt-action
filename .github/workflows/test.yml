name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - ubuntu-18.04
          - windows-2022
          - windows-2019
          - macos-11
          - macos-12
        qt:
          - version: "5.9.0"
            requested: "5.9.0"
          - version: "5.15.2"
            requested: "5.15"
          - version: "6.3.2"  # Qt 6.3 is not an LTS version, so '6.3.*' always resolves to '6.3.2'
            requested: "6.3.*"
        arch:
          - ""                  # use the default arch
          - wasm_32             # Does not exist on 5.9.*. Requires parallel desktop installation on Qt6+
          - android_arm64_v8a   # Use 'android' on 5.14-5.15. Requires parallel desktop installation on Qt6+
        cache:
          - cached
          - uncached

        # Ubuntu 18 is not a supported target for Qt 6: https://www.qt.io/blog/qt6-development-hosts-and-targets
        exclude:
          - os: ubuntu-18.04
            qt: {version: "6.3.2", requested: "6.3.*"}
          - arch: wasm_32
            qt: {version: "5.9.0", requested: "5.9.0"}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run build

      - name: Install Qt5 with options
        if: startsWith(matrix.qt.version, '5')
        uses: ./
        with:
          modules: qtwebengine
          version: ${{ matrix.qt.requested }}
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}
          # Target: 'android' if arch starts with 'android', else 'desktop'
          target: ${{ startsWith(matrix.arch, 'android') && 'android' || 'desktop' }}
          # Arch: If qt.version starts with 5.15 and arch starts with android, then arch is 'android', else 'matrix.arch'
          arch: ${{ (startsWith(matrix.qt.version, '5.15') && startsWith(matrix.arch, 'android')) && 'android' || matrix.arch }}

      - name: Install Qt6 with options
        if: startsWith(matrix.qt.version, '6')
        uses: ./
        with:
          # In Qt 6.2.0+, qtwebengine requires qtpositioning and qtwebchannel
          modules: qtwebengine qtpositioning qtwebchannel
          version: ${{ matrix.qt.requested }}
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}
          # Target: 'android' if arch starts with 'android', else 'desktop'
          target: ${{ startsWith(matrix.arch, 'android') && 'android' || 'desktop' }}
          # Arch: If qt.version starts with 5.15 and arch starts with android, then arch is 'android', else 'matrix.arch'
          arch: ${{ (startsWith(matrix.qt.version, '5.15') && startsWith(matrix.arch, 'android')) && 'android' || matrix.arch }}

      - name: Configure test project on windows
        if: startsWith(matrix.os, 'windows')
        env:
          QT_VERSION: ${{ matrix.qt.version }}
        run: |
          cd tests/TestWithModules
          for /f "delims=" %%d in ( 'vswhere.exe -latest -property installationPath' ) do @( call "%%d\VC\Auxiliary\Build\vcvars64.bat" )
          IF "%QT_VERSION:~0,1%"=="5" ( dir %Qt5_DIR%\lib\cmake ) ELSE ( dir %Qt6_DIR%\lib\cmake )
          qmake
        shell: cmd

      - name: Configure test project on unix
        if: (!startsWith(matrix.os, 'windows'))
        env:
          QT_VERSION: ${{ matrix.qt.version }}
        run: |
          cd tests/TestWithModules
          if [[ $QT_VERSION == 6* ]]; then
            ls "$Qt6_DIR/lib/cmake"
          else
            ls "$Qt5_DIR/lib/cmake"
          fi
          qmake
        shell: bash
