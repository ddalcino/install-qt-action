name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run lint

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - ubuntu-20.04
          - windows-2022
          - windows-2019
          - macos-11
          - macos-12
        aqtversion:
          - null  # use whatever the default is
        qt:
          - version: "5.9.0"
            requested: "5.9.0"
            modules: qtwebengine
          - version: "5.15.2"
            requested: "5.15"
            modules: qtwebengine
          - version: "6.3.2"  # Qt 6.3 is not an LTS version, so '6.3.*' always resolves to '6.3.2'
            requested: "6.3.*"
            # In Qt 6.2.0+, qtwebengine requires qtpositioning and qtwebchannel
            modules: qtwebengine qtpositioning qtwebchannel
          - version: null   # Tools-only build
            requested: null
        cache:
          - cached
          - uncached
        include:
          - os: ubuntu-22.04
            aqtversion: "==3.1.*"
            qt:
              version: "5.15.2"
              requested: "5.15"
              modules: qtwebengine


    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          cache-dependency-path: action/

      - run: |
          cd action
          npm ci || npm install
        shell: bash

      - run: |
          cd action
          npm run build

      - name: Install Qt with options and default aqtversion
        if: ${{ !matrix.aqtversion && matrix.qt.version }}
        uses: ./
        with:
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}

      - name: Install Qt with options and specified aqtversion
        if: ${{ matrix.aqtversion && matrix.qt.version }}
        uses: ./
        with:
          aqtversion: ${{ matrix.aqtversion }}
          modules: ${{ matrix.qt.modules }}
          version: ${{ matrix.qt.requested }}
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}

      - name: Configure test project on windows
        if: ${{ matrix.qt.version && startsWith(matrix.os, 'windows') }}
        env:
          QT_VERSION: ${{ matrix.qt.version }}
        run: |
          cd tests/TestWithModules
          for /f "delims=" %%d in ( 'vswhere.exe -latest -property installationPath' ) do @( call "%%d\VC\Auxiliary\Build\vcvars64.bat" )
          REM the next line won't work yet, but it should print the contents of arch/lib/cmake/Qt5:
          REM IF "%QT_VERSION:~0,1%"=="5" ( dir %Qt5_DIR% ) ELSE ( dir %Qt6_DIR% )
          if "%QT_VERSION:~0,1%"=="5" ( 
            cmake -S . -B ./build
          ) else ( 
            cmake -S . -B ./build -DCMAKE_PREFIX_PATH=%Qt6_DIR%
          )
          qmake
        shell: cmd

      - name: Configure test project on unix
        if: ${{ matrix.qt.version && !startsWith(matrix.os, 'windows') }}
        env:
          QT_VERSION: ${{ matrix.qt.version }}
        run: |
          cd tests/TestWithModules
          if [[ $QT_VERSION == 6* ]]; then
            # the next line won't work yet, but it should print the contents of arch/lib/cmake/Qt6:
            #ls "${Qt6_DIR}"
          
            # Qt 6 does not look for `Qt6_DIR` env variable. W  e need to pass Qt_dir to cmake in CMAKE_PREFIX_PATH
            cmake -S . -B ./build -DCMAKE_PREFIX_PATH="${Qt6_DIR}"
          else
            # the next line won't work yet, but it should print the contents of arch/lib/cmake/Qt5:
            #ls "${Qt5_DIR}"
            cmake -S . -B ./build
          fi
          qmake
        shell: bash

      - name: Install tools with options
        if: ${{ !matrix.qt.version }}
        uses: ./
        with:
          tools-only: true
          tools: tools_ifw tools_qtcreator,qt.tools.qtcreator
          cache: ${{ matrix.cache == 'cached' }}

      - name: Test installed tools
        if: ${{ !matrix.qt.version }}
        env:
          # Conditionally set qtcreator path based on os:
          QTCREATOR_BIN_PATH: ${{ startsWith(matrix.os, 'macos') && '../Qt/Qt Creator.app/Contents/MacOS/' || '../Qt/Tools/QtCreator/bin/' }}
        shell: bash
        run: |
          # Check if QtIFW is installed
          ls ../Qt/Tools/QtInstallerFramework/*/bin/
          ../Qt/Tools/QtInstallerFramework/*/bin/archivegen --version
  
          # Check if QtCreator is installed: QtCreator includes the CLI program 'qbs' on all 3 platforms
          ls "${QTCREATOR_BIN_PATH}"
          "${QTCREATOR_BIN_PATH}qbs" --version
